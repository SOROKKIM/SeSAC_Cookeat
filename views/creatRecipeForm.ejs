<!DOCTYPE html>
<html lang="ko">
    <head>
        <meta charset="UTF-8" />
        <link rel="egg icon" href="/static/favicon.png" type="image/png" />

        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="http://localhost:8080/" />
        <meta property="og:title" content="Cook! Eat!" />
        <meta property="og:image" content="/static/free-icon-fried-egg.png" />
        <meta property="og:description" content="나만의 레시피를 자랑해보세요!" />
        <meta property="og:site_name" content="Cook Eat" />
        <!-- 다음의 태그는 필수는 아니지만, 포함하는 것을 추천함 -->
        <meta property="og:image:width" content="1200" />
        <meta property="og:image:height" content="630" />
        <title>레시피 업로드</title>
        <!-- include libraries(jQuery, bootstrap) -->
        <link
            href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"
            rel="stylesheet"
        />
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
        <!-- include summernote css/js -->
        <link
            href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css"
            rel="stylesheet"
        />
        <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
        <!-- axios CDN -->
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <br />

        <script>
            // 로그인 되어 있지 않은 유저는 작성 불가능
            (function () {
                const token = localStorage.getItem("user");
                if (!token) {
                    alert("로그인 후 작성할 수 있습니다");
                    window.location.href = "/login";
                }
            })();

            //
            var notice_form = `
                <h4> 양식에 맞게 레시피를 작성해 주세요.</h4>
                <p style="color: gray;">⚠️ 이미지는 복사, 붙여넣기 해서 첨부해 주세요.</p>
                `;

            var default_form = `
                ${notice_form}
                <br />
                <p><strong> - 요리명 : </strong></p>
                <br />
                <p><strong> - 재료 : </strong></p>
                <br />
                <p><strong> - 조리 순서 : </strong></p>
                <br />
                `;
            $(document).ready(function () {
                var imgURLs = []; // 이미지 URL들을 저장할 배열

                function uploadImage(file) {
                    var data = new FormData();
                    data.append("file", file);
                    axios({
                        url: "/recipeUploadImg",
                        method: "POST",
                        data: data,
                        headers: {
                            "Content-Type": "multipart/form-data",
                        },
                    }).then(function (response) {
                        // 이미지 URL을 에디터에 삽입
                        $("#summernote").summernote("insertImage", response.data.url);
                        // 전역 변수에 이미지 URL을 저장
                        // 배열에 이미지 URL을 추가
                        imgURLs.push(response.data.url);
                        localStorage.setItem("imgURLs", JSON.stringify(imgURLs));
                    });
                }

                $("#summernote").summernote({
                    placeholder: "- 나만의 레시피를 작성해 주세요",
                    tabsize: 2,
                    height: 740,
                    toolbar: [
                        ["style", ["bold", "italic", "underline", "clear"]],
                        ["font", ["strikethrough", "superscript", "subscript"]],
                        ["fontsize", ["fontsize"]],
                        ["color", ["color"]],
                        ["para", ["ul", "ol", "paragraph"]],
                        ["height", ["height"]],
                        ["insert", ["link"]],
                        ["view", ["fullscreen", "codeview", "help"]],
                    ],
                    callbacks: {
                        onFocus: function () {
                            // 에디터가 비어 있을 때만 기본 양식을 설정
                            if ($("#summernote").summernote("isEmpty")) {
                                $("#summernote").summernote("code", default_form);
                            }
                        },
                        onImageUpload: function (files) {
                            uploadImage(files[0]);
                        },
                        onPaste: function (e) {
                            var clipboardData = e.originalEvent.clipboardData;
                            if (
                                clipboardData &&
                                clipboardData.items &&
                                clipboardData.items.length
                            ) {
                                var item = clipboardData.items[0];
                                if (item.kind === "file" && item.type.indexOf("image/") !== -1) {
                                    e.preventDefault();
                                    uploadImage(item.getAsFile());
                                }
                            }
                        },
                    },
                });
            });

            function recipeSummit() {
                var title = $("#title").val();
                var content = $("#summernote").summernote("code"); // 에디터의 내용을 HTML 문자열로 가져옴
                content = content.replace(notice_form, "");
                var category = $("#category").val();
                var accessToken = localStorage.getItem("user");
                var imgURLs = JSON.parse(localStorage.getItem("imgURLs")); // imgURLs를 가져옴

                //input창 점검 추가
                if (!title.trim() || title.length > 20) {
                    alert("제목은 20자 이내로 입력해주세요.");
                } else if (!category) {
                    alert("카테고리를 선택해주세요!");
                } else {
                    axios({
                        method: "post",
                        url: "/post",
                        headers: {
                            Authorization: "Bearer " + accessToken,
                            "Content-Type": "application/json",
                        },
                        data: {
                            title: title,
                            content: content,
                            imgURLs: imgURLs, // imgURLs를 data에 추가
                            category: category,
                        },
                    })
                        .then(function (response) {
                            alert("레시피 등록이 완료되었습니다.");
                            localStorage.setItem("createPostId", response.data.postId); // response에서 postId 가져와서 저장
                            window.location = "/post/" + response.data.postId;
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                    //axios끝
                }
            }
        </script>
    </head>
    <body>
        <%- include('nav.ejs') %>
        <br />
        <div class="container" style="margin-top: 20px; margin-bottom: 20px">
            <div>
                <div class="form-group">
                    <h2><label for="title">레시피 작성하기</label></h2>
                    <!-- placeholder 속성 입력한 데이터가 없는 경우 배경으로 나타난다.실제적으로 입력을 100자까지로 지정 -->
                    <!-- required 속성을 설정하면 필수입력 사항이된다. -->
                    <!-- pattern 속성을 이용한 정규표현식으로 데이터의 유효성 검사를 할 수 있다. -->
                    <input
                        type="text"
                        class="form-control"
                        id="title"
                        placeholder="나만의 레시피 이름을 작성해주세요."
                        name="title"
                        maxlength="150"
                        required="required"
                        pattern=".{4,150}"
                        required
                    />
                </div>
                <div class="form-group">
                    <!--  여러줄의 데이터를 입력하고 하고자 할때 textarea 태그를 사용한다. -->
                    <!--  textarea 안에 있는 모든 글자는 그대로 나타난다. 공백문자, tag, enter -->
                    <textarea
                        class="form-control1"
                        rows="5"
                        id="summernote"
                        name="content"
                        placeholder="내용 작성"
                        required
                    ></textarea>
                </div>
                <div class="form-group">
                    <label for="category">Cooking Style</label>
                    <select class="form-control" id="category" name="category" required>
                        <option selected disabled>카테고리를 선택해주세요.</option>
                        <option value="한식">한식</option>
                        <option value="양식">양식</option>
                        <option value="중식">중식</option>
                        <option value="일식">일식</option>
                        <option value="퓨전">퓨전</option>
                        <option value="베이킹">베이킹</option>
                        <option value="기타">기타</option>
                    </select>
                </div>
                <br />
                <button type="button" class="btn btn-secondary" onclick="recipeSummit()">
                    레시피 등록
                </button>
                <button
                    type="button"
                    class="btn btn-outline-secondary"
                    onclick="cancelRecipeEdit()"
                >
                    작성 취소
                </button>
            </div>
            <br />
            <br />
            <br />
        </div>
        <%- include('footer.ejs') %>
        <script>
            function cancelRecipeEdit() {
                // 사용자에게 경고 메시지 표시
                var isConfirmed = confirm(
                    "작성 중인 내용이 저장되지 않을 수 있습니다. 정말로 뒤로 가시겠습니까?"
                );

                // 사용자가 확인을 눌렀을 경우 뒤로 가기 실행
                if (isConfirmed) {
                    window.history.back();
                }
            }
        </script>
    </body>
</html>
