<!DOCTYPE html>
<html lang="ko">
    <head>
        <meta charset="UTF-8" />
        <link rel="egg icon" href="/static/favicon.png" type="image/png" />

        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>POST</title>
        <%- include('nav.ejs') %> <%- include('footer.ejs') %>
        <link rel="stylesheet" href="/static/post.css" />
        <link
            rel="stylesheet"
            href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
        />
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    </head>
    <body>
        <!-- {
        'postId" : 1, 
        "username" :"banana1234", 
        "title" : "blah", 
        ”content” : “ababla”,
        ”createdAt” : ”2024/02/28” 
        } -->
        <div class="container">
            <!-- 제목 -->
            <div class="titleCategoryBox">
                <h1><%=post.title %></h1>
                <div class="category"><%=post.category%></div>
            </div>
            <div class="postNav">
                <div class="navContent">
                    <!-- <div class="postId"><%#=post.id %></div> -->
                    <div class="postId" hidden><%=post.postId %></div>
                    <div class="img">
                        <img
                            src="/static/account.png"
                            alt="Profile"
                            style="width: 30px; height: 30px; border-radius: 50%"
                            class="account-image"
                            id="postProfileImg"
                        />
                    </div>
                    <div class="userName"><%=post.author.userName%></div>
                    <div class="follow">
                        <p id="followText">follow</p>
                        <span class="material-symbols-outlined followIcon" onclick="goFollow()">
                            favorite
                        </span>
                        <!-- <button type="button">FOLLOW</button> -->
                    </div>
                    <!-- <div class="category"><%#=post.category%></div> -->
                </div>
                <div class="time">
                    <div class="createdAt"><%=formattedDate %></div>
                </div>
            </div>
            <div class="contentBox">
                <div class="content"><%-post.content %></div>
            </div>
            <div class="buttonBox">
                <div class="myBox">
                    <button type="button" class="editPost" onclick="getEdit()">EDIT</button>
                    <button type="button" class="deletePost" onclick="deletePost()">DELETE</button>
                </div>
                <div class="bookmarkBox">
                    <div class="bookmark">
                        <span class="material-symbols-outlined bookmarkIcon" onclick="goBookmark()">
                            bookmark
                        </span>
                        <!-- <button type="button">BOOKMARK</button> -->
                    </div>
                </div>
            </div>
            <div class="posts">
                <button type="button" onclick="getPosts()">POSTS</button>
            </div>
        </div>
        <div class="space"></div>
    </body>

    <script>
        // 0. 토큰정보 가져오기
        const token = localStorage.getItem("user");
        const userId = localStorage.getItem("userId");
        const postUserId = "<%=post.id %>";
        const bookmarkIcon = document.querySelector(".bookmarkIcon");
        const followIcon = document.querySelector(".followIcon");
        let isBookmark;
        let isFollow;
        console.log("token", token);
        console.log("userId", userId); //User테이블의 id임

        if (!token) {
            //로그인 X 북마크, 팔로우 기능 사용불가
            bookmarkIcon.style.visibility = "hidden";
            followIcon.style.visibility = "hidden";
            document.getElementById("followText").style.visibility = "hidden";
        } else {
            if (postUserId == userId) {
                //로그인 상태이고, 내 글일 때
                bookmarkIcon.style.visibility = "hidden";
                followIcon.style.visibility = "hidden";
                document.getElementById("followText").style.visibility = "hidden";
            } else {
                //로그인 상태, 내 글이 아닐때
                axios({
                    url: "/postData/" + "<%=post.postId %>",
                    method: "post",
                    headers: { Authorization: "Bearer " + token },
                })
                    .then((res) => {
                        console.log(res.data.isBookmark);
                        console.log(res.data.isFollow);
                        isBookmark = res.data.isBookmark;
                        isFollow = res.data.isFollow;
                        if (isBookmark) {
                            bookmarkIcon.style.color = "red";
                            // bookmarkIcon.style.scale = "1.5";
                        }
                        if (isFollow) {
                            followIcon.style.color = "red";
                            // followIcon.style.scale = "1.5";
                        }
                    })
                    .catch((err) => {
                        console.log("err>>", err);
                    });
            }
        }

        // 4. bookmark버튼
        function goBookmark() {
            if (isBookmark) {
                axios({
                    url: "/bookmarkDelete/" + "<%=post.postId %>",
                    method: "delete",
                    headers: {
                        Authorization: "Bearer " + token,
                    },
                })
                    .then((res) => {
                        console.log(res.data);
                        alert(res.data.msg);
                        location.reload(); //다시 로드함
                    })
                    .catch((err) => {
                        alert("오류 발생");
                        console.log("err>>", err);
                    });
            } else {
                axios({
                    url: "/bookmarkInsert/" + "<%=post.postId %>",
                    method: "post",
                    headers: {
                        Authorization: "Bearer " + token,
                    },
                })
                    .then((res) => {
                        console.log("Post 데이터:", res.data.post);
                        alert(res.data.msg);
                        location.reload(); //다시 로드함
                    })
                    .catch((err) => {
                        alert("오류 발생");
                        console.log("err>>", err);
                    });
            }
        }

        // 5. follow버튼
        const id = "<%=post.id%>"; //글작성자의 아이디, 내가 팔로우할 아이디
        function goFollow() {
            if (isFollow) {
                //팔로우 삭제
                // alert("팔로우 삭제");
                axios({
                    url: "/followDelete",
                    method: "delete",
                    data: { id: id },
                    headers: {
                        Authorization: "Bearer " + token,
                    },
                })
                    .then((res) => {
                        console.log(res.data);
                        alert(res.data.msg);
                        location.reload(); //다시 로드함
                    })
                    .catch((err) => {
                        alert("오류 발생");
                        console.log("err>>", err);
                    });
            } else {
                //팔로우 추가
                axios({
                    url: "/followInsert",
                    method: "post",
                    data: { id: id },
                    headers: {
                        Authorization: "Bearer " + token,
                    },
                })
                    .then((res) => {
                        console.log(res.data);
                        alert(res.data.msg);
                        location.reload(); //다시 로드함
                    })
                    .catch((err) => {
                        alert("오류 발생");
                        console.log("err>>", err);
                    });
            }
        }

        // 0-5 수정, 삭제 버튼은 토큰 일치해야 보이도록 설정
        const editPostBtn = document.querySelector(".editPost");
        const deletePostBtn = document.querySelector(".deletePost");
        if (postUserId != userId) {
            editPostBtn.style.visibility = "hidden";
            deletePostBtn.style.visibility = "hidden";
        }
        // 1. posts버튼 클릭시 목록 페이지 이동
        function getPosts() {
            location.href = "/posts";
        }
        // 2. 수정버튼 클릭시 수정페이지 이동
        function getEdit() {
            // 현재 보고 있는 포스트의 데이터 가져오기
            const postData = {
                postId: document.querySelector(".postId").innerText, // 게시글 ID
                title: document.querySelector("h1").innerText, // 게시글 제목
                content: document.querySelector(".content").innerHTML, // 게시글 본문 내용
                category: document.querySelector(".category").innerText, // 게시글 카테고리
                // imgURLs: [...], // 이미지 파일 URL들, 필요에 따라 추가
            };
            // 로컬 스토리지에 저장
            localStorage.setItem("editPostData", JSON.stringify(postData));
            // URL 파라미터로 postId 포함해서 리다이렉션
            location.href = "/postEdit/" + postData.postId;
        }
        // 3. 삭제 버튼 클릭시 확인confirm후 삭제
        function deletePost() {
            const deleteOk = confirm("삭제하겠습니까?");
            if (deleteOk) {
                //삭제작업 axios
                axios({
                    url: "/post/" + "<%=post.postId %>",
                    method: "delete",
                    headers: {
                        Authorization: "Bearer " + token,
                    },
                })
                    .then((res) => {
                        alert("게시글 삭제가 완료되었습니다");
                        location.href = "/posts";
                    })
                    .catch((err) => {
                        console.log("err>>", err);
                    });
            } else {
                //삭제취소
            }
        }

        // const imgURL = localStorage.getItem("imgURL"); // imgURL를 가져옴
        const imgURL = "<%=url%>"; // imgURL를 가져옴
        var imageUrl;

        if (imgURL.length > 5) {
            imageUrl = imgURL.replace(/^&#34;|&#34;$/g, "").replace(/\\/g, "/");
        } else {
            imageUrl = "/static/account.png"; // 기본 이미지 URL로 변경하세요.
            console.log("imgURL is not found in localStorage, using default image.");
        }
        console.log("nav.ejs >>>> ", imageUrl);
        document.getElementById("postProfileImg").src = imageUrl;
    </script>
</html>
