<!-- views/join.ejs -->

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <link rel="egg icon" href="/static/favicon.png" type="image/png" />

        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" type="text/css" href="/static/join.css" />
        <title>Join Page</title>
        <%- include('nav.ejs') %> <%- include('footer.ejs') %>
    </head>
    <body>
        <div class="myapp-join-box">
            <h2>회원가입 페이지</h2>

            <div class="join-input-container">
                <button class="join-check-button" onclick="handleUsernameDuplicationCheck()">
                    ID 확인
                </button>
                <input
                    id="userId"
                    type="text"
                    value="<%#= username %>"
                    oninput="setUserId(this.value)"
                    required
                />
                <label for="userId">아이디</label>
            </div>

            <div class="join-input-container">
                <button class="join-check-button" onclick="handleNicknameDuplicationCheck()">
                    닉네임 확인
                </button>
                <input
                    id="userName"
                    type="text"
                    value="<%#= nickName %>"
                    oninput="setUserName(this.value)"
                    required
                />
                <label for="userName">닉네임</label>
            </div>

            <div class="join-input-container">
                <input
                    id="password"
                    type="password"
                    value="<%#= password %>"
                    oninput="setPassword(this.value)"
                    required
                />
                <label for="password">비밀번호</label>
            </div>
            <div class="join-input-container">
                <input
                    id="confirm-password"
                    type="password"
                    value="<%#= confirmPassword %>"
                    oninput="setConfirmPassword(this.value); checkPasswordMatch();"
                    required
                />
                <label for="confirm-password">비밀번호 확인</label>
                <p id="password-match-error" class="error-message"></p>
            </div>

            <button class="join-submit-button" onclick="handleJoin()">제출</button>
            <br />
            <p class="login-link">이미 회원이신가요? <a href="/login"> 로그인 페이지로 이동</a></p>
        </div>

        <script>
            function setUserName(value) {
                // 클라이언트 측에서 수행해야 할 동작
                // ...
            }
            function setUserId(value) {
                // 클라이언트 측에서 수행해야 할 동작
                // ...
            }

            function handleUsernameDuplicationCheck() {
                const userId = document.getElementById("userId").value;
                if (!userId.trim()) {
                    // ID 입력창이 빈칸인 경우
                    alert("ID를 입력해주세요!");
                    return;
                }
                // ID 중복 확인 요청
                fetch("/checkUsername", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ userId }),
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.exists) {
                            // 이미 존재하는 ID인 경우
                            alert("이미 있는 ID입니다!");
                        } else {
                            // 사용 가능한 ID인 경우
                            alert("사용 가능한 ID입니다!");
                        }
                    })
                    .catch((error) => {
                        console.error("ID 중복 확인 중 에러 발생:", error);
                        alert("서버 오류로 ID 중복 확인에 실패하였습니다.");
                    });
            }

            function handleNicknameDuplicationCheck() {
                const userName = document.getElementById("userName").value;
                if (!userName.trim()) {
                    // 닉네임 입력창이 빈칸인 경우
                    alert("닉네임을 입력해주세요!");
                    return;
                }
                // 닉네임 중복 확인 요청
                fetch("/checkNickname", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ userName }),
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.exists) {
                            // 이미 존재하는 닉네임인 경우
                            alert("이미 있는 닉네임입니다!");
                        } else {
                            // 사용 가능한 닉네임인 경우
                            alert("사용 가능한 닉네임입니다!");
                        }
                    })
                    .catch((error) => {
                        console.error("닉네임 중복 확인 중 에러 발생:", error);
                        alert("서버 오류로 닉네임 중복 확인에 실패하였습니다.");
                    });
            }

            function setPassword(value) {
                // 클라이언트 측에서 수행해야 할 동작
                // ...
            }

            function setConfirmPassword(value) {
                // 클라이언트 측에서 수행해야 할 동작
                // ...
            }

            function checkPasswordMatch() {
                const password = document.getElementById("password").value;
                const confirmPassword = document.getElementById("confirm-password").value;
                const passwordMatchErrorElement = document.getElementById("password-match-error");

                if (password !== confirmPassword) {
                    passwordMatchErrorElement.textContent =
                        "비밀번호와 비밀번호 확인 입력값이 다릅니다.";
                } else {
                    passwordMatchErrorElement.textContent = "";
                }
            }

            function handleJoin() {
                const userId = document.getElementById("userId").value;
                const userName = document.getElementById("userName").value;
                const password = document.getElementById("password").value;
                const confirmPassword = document.getElementById("confirm-password").value;

                // 비밀번호 일치 여부 확인
                if (password !== confirmPassword) {
                    alert("비밀번호와 비밀번호 확인 입력값이 다릅니다. 다시 확인해주세요.");
                    return;
                }

                // ID와 닉네임 확인 여부 확인
                if (userId.trim() === "" || userName.trim() === "") {
                    alert("ID와 닉네임을 확인해주세요!");
                    return;
                }

                // 서버로 중복 여부를 다시 확인
                fetch("/checkUsername", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ userId }),
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.exists) {
                            // 이미 존재하는 ID인 경우
                            alert("중복된 ID로는 가입이 불가능합니다!");
                        } else {
                            // 사용 가능한 ID인 경우
                            // 추가적으로 닉네임 중복 여부도 확인
                            fetch("/checkNickname", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify({ userName }),
                            })
                                .then((response) => response.json())
                                .then((data) => {
                                    if (data.exists) {
                                        // 이미 존재하는 닉네임인 경우
                                        alert("중복된 닉네임으로는 가입이 불가능합니다!");
                                    } else {
                                        // 사용 가능한 닉네임인 경우
                                        // 나머지 회원가입 정보를 서버로 전송
                                        fetch("/postJoin", {
                                            method: "POST",
                                            headers: {
                                                "Content-Type": "application/json",
                                            },
                                            body: JSON.stringify({
                                                userId,
                                                userName,
                                                password,
                                            }),
                                        })
                                            .then((response) => response.json())
                                            .then((data) => {
                                                if (data.statusCode === 200) {
                                                    alert("가입이 완료되었습니다!");
                                                    window.location.href = "/login";
                                                } else {
                                                    alert(
                                                        "가입에 실패했습니다. 다시 시도해주세요."
                                                    );
                                                }
                                            })
                                            .catch((error) => {
                                                console.error("회원가입 중 에러 발생:", error);
                                                alert("서버 오류로 회원가입에 실패하였습니다.");
                                            });
                                    }
                                })
                                .catch((error) => {
                                    console.error("닉네임 중복 확인 중 에러 발생:", error);
                                    alert("서버 오류로 닉네임 중복 확인에 실패하였습니다.");
                                });
                        }
                    })
                    .catch((error) => {
                        console.error("ID 중복 확인 중 에러 발생:", error);
                        alert("서버 오류로 ID 중복 확인에 실패하였습니다.");
                    });
            }
        </script>
    </body>
</html>
